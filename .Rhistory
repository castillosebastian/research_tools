round(., 2) %>%
corrplot::corrplot.mixed(.,order = 'AOE')
lista_resultados
}
dataset = 4
results = multieda(df, dataset)
multieda <- function(list, df = 1){
lista_resultados <- list()
lista_resultados$coeficiente_variacion <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(raster::cv, na.rm =T)
lista_resultados$sesgo <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(moments::skewness)
lista_resultados$curtosis <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(moments::kurtosis)
# grafico de correlacion
lista_resultados$graf_correlacion <- list[[df]] %>%
select_if(is.numeric) %>%
cor(., use="complete.obs") %>%
round(., 2) %>%
corrplot::corrplot.mixed(.,order = 'AOE')
lista_resultados
}
dataset = 4
results = multieda(df, dataset)
multieda <- function(list, df = 1){
lista_resultados <- list()
lista_resultados$coeficiente_variacion <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(raster::cv, na.rm =T)
lista_resultados$sesgo <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(moments::skewness)
lista_resultados$curtosis <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(moments::kurtosis)
# grafico de correlacion
lista_resultados$m_correlacion <- list[[df]] %>%
select_if(is.numeric) %>%
cor(., use="complete.obs") %>%
round(., 2)
lista_resultados
}
dataset = 4
results = multieda(df, dataset)
corrplot::corrplot.mixed(results$m_correlacion ,order = 'AOE')
results$m_correlacion <- NULL
knit_print(results)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
source("intro.R")
df <- list()
df$IMCinfantil <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/IMCinfantil.xlsx")
df$gorriones <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/gorriones.xlsx")
df$Internet2013 <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/Internet2013.xlsx")
df$recepcionistas <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/recepcionistas.xlsx")
# falta razaperros
dataset = 4
results = multieda(df, dataset)
knit_print(skim(df[[dataset]]))
knit_print(results)
datos
datos_matriz <- datos %>%
pivot_wider(names_from = variables, values_from = valores)
datos_matriz
datos_matriz <- datos %>%
pivot_wider(names_from = variables, values_from = valores) %>%
mutate(juez = str_extract_all(juez, '[a-z]'))
datos_matriz
datos_matriz <- datos %>%
pivot_wider(names_from = variables, values_from = valores) %>%
mutate(juez = str_remove_all(juez, '[a-z]'))
datos_matriz
datos_matriz <- datos %>%
pivot_wider(names_from = variables, values_from = valores) %>%
mutate(juez = as.integer(str_remove_all(juez, '[a-z]')))
datos_matriz
cor(datos_matriz)
cor(datos_matriz %>% filter_if(is.numeric))
cor(datos_matriz %>% select_if(is.numeric))
matriz_correlacion <- datos_matriz %>%
select_if(is.numeric) %>%
cor(., use="complete.obs") %>%
round(., 2)
corrplot::corrplot.mixed(matriz_correlacion ,order = 'AOE')
matriz_varianza <- datos_matriz %>%
select_if(is.numeric) %>%
var(., use="complete.obs") %>%
round(., 2)
matriz_covarianza <- datos_matriz %>%
select_if(is.numeric) %>%
cov(., use="complete.obs") %>%
round(., 2)
matriz_correlacion <- datos_matriz %>%
select_if(is.numeric) %>%
cor(., use="complete.obs") %>%
round(., 2)
matriz_varianza
matriz_covarianza
matriz_correlacion
datos_matriz %>% View()
datos_matriz <- datos %>%
pivot_wider(names_from = variables, values_from = valores) #%>%
#mutate(juez = as.integer(str_remove_all(juez, '[a-z]')))
matriz_varianza <- datos_matriz %>%
select_if(is.numeric) %>%
var(., use="complete.obs") %>%
round(., 2)
matriz_covarianza <- datos_matriz %>%
select_if(is.numeric) %>%
cov(., use="complete.obs") %>%
round(., 2)
matriz_correlacion <- datos_matriz %>%
select_if(is.numeric) %>%
cor(., use="complete.obs") %>%
round(., 2)
corrplot::corrplot.mixed(matriz_correlacion ,order = 'AOE')
datos_matriz
# otros estadìsticos
datos_matriz <- datos %>%
pivot_wider(names_from = variables, values_from = valores) #%>%
#mutate(juez = as.integer(str_remove_all(juez, '[a-z]')))
matriz_varianza <- datos_matriz %>%
select_if(is.numeric) %>%
var(., use="complete.obs") %>%
round(., 2)
matriz_covarianza <- datos_matriz %>%
select_if(is.numeric) %>%
cov(., use="complete.obs") %>%
round(., 2)
matriz_correlacion <- datos_matriz %>%
select_if(is.numeric) %>%
cor(., use="complete.obs") %>%
round(., 2)
corrplot::corrplot.mixed(matriz_correlacion ,order = 'AOE')
matriz_covarianza
det(matriz_covarianza)
matriz_correlacion
knit_print(skim(df[[dataset]]))
matriz_covarianza
View(datos_matriz)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
source("intro.R")
df <- list()
df$IMCinfantil <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/IMCinfantil.xlsx")
df$gorriones <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/gorriones.xlsx")
df$Internet2013 <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/Internet2013.xlsx")
df$recepcionistas <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/recepcionistas.xlsx")
# falta razaperros
# otros estadìsticos
datos_matriz <- datos %>%
pivot_wider(names_from = variables, values_from = valores) #%>%
#mutate(juez = as.integer(str_remove_all(juez, '[a-z]')))
matriz_varianza <- datos_matriz %>%
select_if(is.numeric) %>%
var(., use="complete.obs") %>%
round(., 2)
matriz_covarianza <- datos_matriz %>%
select_if(is.numeric) %>%
cov(., use="complete.obs") %>%
round(., 2)
matriz_correlacion <- datos_matriz %>%
select_if(is.numeric) %>%
cor(., use="complete.obs") %>%
round(., 2)
corrplot::corrplot.mixed(matriz_correlacion ,order = 'AOE')
determinante <- det(matriz_covarianza)
var(datos_matriz$cord)
length(datos_matriz$cord)
var(datos_matriz$cord) == (datos_matriz$cord - mean(datos_matriz$cord))/ length(datos_matriz$cord)
var(datos_matriz$cord) == sum(datos_matriz$cord - mean(datos_matriz$cord)) / length(datos_matriz$cord)
sum(datos_matriz$cord - mean(datos_matriz$cord)) / length(datos_matriz$cord)
datos_matriz$cord
mean(datos_matriz$cord))
mean(datos_matriz$cord)
datos_matriz$cord - mean(datos_matriz$cord)
sum(datos_matriz$cord - mean(datos_matriz$cord))
format(sum(datos_matriz$cord - mean(datos_matriz$cord)), scientific = F)
sum(datos_matriz$cord - mean(datos_matriz$cord))
sum((datos_matriz$cord - mean(datos_matriz$cord))^2)
sum((datos_matriz$cord - mean(datos_matriz$cord))^2) / length(datos_matriz$cord)
sum((datos_matriz$cord - mean(datos_matriz$cord))^2) / length(datos_matriz$cord)-1
sum((datos_matriz$cord - mean(datos_matriz$cord))^2) / (length(datos_matriz$cord)-1)
var(datos_matriz$cord) == sum((datos_matriz$cord - mean(datos_matriz$cord))^2) / (length(datos_matriz$cord)-1) # este -1 es muy importante
sum((datos_matriz$cord - mean(datos_matriz$cord))^2) / (length(datos_matriz$cord)-1)
var(datos_matriz$cord)
var(datos_matriz$cord) == sum((datos_matriz$cord - mean(datos_matriz$cord))^2) / (length(datos_matriz$cord)-1) # este -1 es muy importante
str(var(datos_matriz$cord))
str(sum((datos_matriz$cord - mean(datos_matriz$cord))^2) / (length(datos_matriz$cord)-1) # e)
str(sum((datos_matriz$cord - mean(datos_matriz$cord))^2) / (length(datos_matriz$cord)-1))
matriz_covarianza
round(var(datos_matriz$cord), digits = 2) ==
round(sum((datos_matriz$cord - mean(datos_matriz$cord))^2) /
(length(datos_matriz$cord)-1), digits = 2) # este -1 es muy importante
var(datos_matriz$cord)
sd(datos_matriz$cord)
round(sum((datos_matriz$cord - mean(datos_matriz$cord))^2) /
(length(datos_matriz$cord)-1), digits = 2)
sd(datos_matriz$cord)
sqrt(round(sum((datos_matriz$cord - mean(datos_matriz$cord))^2) /
(length(datos_matriz$cord)-1), digits = 2))
sd(round(datos_matriz$cord))
sqrt(round(sum((datos_matriz$cord - mean(datos_matriz$cord))^2) /
(length(datos_matriz$cord)-1), digits = 2))
round(sd(datos_matriz$cord), digits = 2)
sqrt(round(sum((datos_matriz$cord - mean(datos_matriz$cord))^2) /
(length(datos_matriz$cord)-1), digits = 2))
sqrt(round(sum((datos_matriz$cord - mean(datos_matriz$cord))^2) /
(length(datos_matriz$cord)-1), digits = 2))
sqrt(round(sum((datos_matriz$cord - mean(datos_matriz$cord))^2) /
(length(datos_matriz$cord)-1), digits = 2))^2
sum((datos_matriz$cord - mean(datos_matriz$cord))^2
sum((datos_matriz$cord - mean(datos_matriz$cord)) * (datos_matriz$pres - mean(datos_matriz$pres))) /
sum(datos_matriz$cord - mean(datos_matriz$cord)) * (datos_matriz$pres - mean(datos_matriz$pres))
sum(datos_matriz$cord - mean(datos_matriz$cord)) * (datos_matriz$pres - mean(datos_matriz$pres)) /
(length(datos_matriz$cord)-1)
datos_matriz$cord - mean(datos_matriz$cord)) * (datos_matriz$pres - mean(datos_matriz$pres)
datos_matriz$cord - mean(datos_matriz$cord) * datos_matriz$pres - mean(datos_matriz$pres)
sum(datos_matriz$cord - mean(datos_matriz$cord) * datos_matriz$pres - mean(datos_matriz$pres))
sum(datos_matriz$cord - mean(datos_matriz$cord) * datos_matriz$pres - mean(datos_matriz$pres)) /
(length(datos_matriz$cord)-1)
datos_matriz$cord - mean(datos_matriz$cord) * datos_matriz$pres - mean(datos_matriz$pres)
(datos_matriz$cord - mean(datos_matriz$cord)) * datos_matriz$pres - mean(datos_matriz$pres)
(datos_matriz$cord - mean(datos_matriz$cord)) * (datos_matriz$pres - mean(datos_matriz$pres))
(datos_matriz$cord - mean(datos_matriz$cord)) * (datos_matriz$pres - mean(datos_matriz$pres))
sum((datos_matriz$cord - mean(datos_matriz$cord)) * (datos_matriz$pres - mean(datos_matriz$pres)))
sum((datos_matriz$cord - mean(datos_matriz$cord)) * (datos_matriz$pres - mean(datos_matriz$pres))) /
(length(datos_matriz$cord)-1)
matriz_covarianza
(datos_matriz$cord - mean(datos_matriz$cord)
datos_matriz$cord - mean(datos_matriz$cord)
datos_matriz$cord - mean(datos_matriz$cord)
sum(datos_matriz$cord - mean(datos_matriz$cord))
-3 * 4
sum((datos_matriz$cord - mean(datos_matriz$cord)) * (datos_matriz$pres - mean(datos_matriz$pres))) /
(length(datos_matriz$cord)-1)
diag(datos_matriz)
as.matrix(datos_matriz)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
source("intro.R")
df <- list()
df$IMCinfantil <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/IMCinfantil.xlsx")
df$gorriones <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/gorriones.xlsx")
df$Internet2013 <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/Internet2013.xlsx")
df$recepcionistas <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/recepcionistas.xlsx")
# falta razaperros
datos %>%
mutate(valores_tr = scale(valores)) %>%
group_by(candidatos) %>%
summarise(suma_valores_tr = sum(valores_tr, na.rm = T)) %>%
arrange(desc(suma_valores_tr)) %>%
ggplot(aes(x= reorder(candidatos, -suma_valores_tr), y = suma_valores_tr)) +
geom_bar(stat = 'identity')
datos
mad(datos$valores)
a = c(14, 18, 24, 26, 35, 39, 44, 45, 56, 62, 68, 87, 201)
a/4
sum(a)/4
quantile(a, probs = 0.25)
quantile(a, probs = 0.75)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
source("intro.R")
df <- list()
df$IMCinfantil <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/IMCinfantil.xlsx")
df$gorriones <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/gorriones.xlsx")
df$Internet2013 <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/Internet2013.xlsx")
df$recepcionistas <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/recepcionistas.xlsx")
# falta razaperros
include_graphics('distribuciones.png')
data
datos
multieda <- function(list, df = 1){
lista_resultados <- list()
# CV = proporcion que representa el desvıo estandar de la media aritmetica
lista_resultados$coeficiente_variacion <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(raster::cv, na.rm =T)
lista_resultados$sesgo <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(moments::skewness)
# Las distribuciones leptocurticas tienen coeficientes superiores a 3 y las
# platicurticas coeficientes menores a 3
lista_resultados$curtosis <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(moments::kurtosis)
# Estadística Robusta
# Median Absolute Deviation= mediana de los desvıos absolutos respecto de la mediana
lista_resultados$mad <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(mad)
# Distancia de Mahalanobis
temp <- list[[df]] %>%
dplyr::select_if(is.numeric)
temp <- mahalanobis(temp, colMeans(temp), cov(temp))
lista_resultados$mahalanobis <- temp
# grafico de correlacion
lista_resultados$m_correlacion <- list[[df]] %>%
select_if(is.numeric) %>%
cor(., use="complete.obs") %>%
round(., 2)
lista_resultados
}
knitr::opts_chunk$set(echo = F, warning = F, message = F)
source("intro.R")
df <- list()
df$IMCinfantil <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/IMCinfantil.xlsx")
df$gorriones <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/gorriones.xlsx")
df$Internet2013 <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/Internet2013.xlsx")
df$recepcionistas <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/recepcionistas.xlsx")
# falta razaperros
dataset = 4
results = multieda(df, dataset)
multieda <- function(list, df = 1){
lista_resultados <- list()
# CV = proporcion que representa el desvıo estandar de la media aritmetica
lista_resultados$coeficiente_variacion <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(raster::cv, na.rm =T)
lista_resultados$sesgo <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(moments::skewness)
# Las distribuciones leptocurticas tienen coeficientes superiores a 3 y las
# platicurticas coeficientes menores a 3
lista_resultados$curtosis <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(moments::kurtosis)
# Estadística Robusta
# Median Absolute Deviation= mediana de los desvıos absolutos respecto de la mediana
lista_resultados$mad <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(mad)
# Distancia de Mahalanobis
temp <- list[[df]] %>%
dplyr::select_if(is.numeric)
temp <- mahalanobis(temp)
lista_resultados$mahalanobis <- temp
# grafico de correlacion
lista_resultados$m_correlacion <- list[[df]] %>%
select_if(is.numeric) %>%
cor(., use="complete.obs") %>%
round(., 2)
lista_resultados
}
dataset = 4
results = multieda(df, dataset)
multieda <- function(list, df = 1){
lista_resultados <- list()
# CV = proporcion que representa el desvıo estandar de la media aritmetica
lista_resultados$coeficiente_variacion <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(raster::cv, na.rm =T)
lista_resultados$sesgo <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(moments::skewness)
# Las distribuciones leptocurticas tienen coeficientes superiores a 3 y las
# platicurticas coeficientes menores a 3
lista_resultados$curtosis <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(moments::kurtosis)
# Estadística Robusta
# Median Absolute Deviation= mediana de los desvıos absolutos respecto de la mediana
lista_resultados$mad <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(mad)
# grafico de correlacion
lista_resultados$m_correlacion <- list[[df]] %>%
select_if(is.numeric) %>%
cor(., use="complete.obs") %>%
round(., 2)
lista_resultados
}
dataset = 4
results = multieda(df, dataset)
# Distancia de Mahalanobis
temp <- datos %>%
dplyr::select_if(is.numeric)
temp <- mahalanobis(temp, colMeans(temp), cov(temp))
temp
datos
# Distancia de Mahalanobis
temp <- datos %>%
dplyr::select_if(is.numeric)
temp <- mahalanobis(temp, colMeans(temp), cov(temp))
datos$mahalanobis <- temp
datos
datos
datos$mahalanobis <- NULL
datos
ncol(datos)-1
# Distancia de Mahalanobis
temp <- datos %>%
dplyr::select_if(is.numeric)
distance <- mahalanobis(temp, colMeans(temp), cov(temp))
datos$mahalanobis <- distance
# evaluando outliers
cutoff <- qchisq(p = 0.95 , df = ncol(datos)-1)
datos[distances > cutoff ,]
# Distancia de Mahalanobis
temp <- datos %>%
dplyr::select_if(is.numeric)
distances <- mahalanobis(temp, colMeans(temp), cov(temp))
datos$mahalanobis <- distances
# evaluando outliers
cutoff <- qchisq(p = 0.95 , df = ncol(datos)-1)
datos[datos$distances > cutoff ,]
# Distancia de Mahalanobis
temp <- datos %>%
dplyr::select_if(is.numeric)
distances <- mahalanobis(temp, colMeans(temp), cov(temp))
datos$mahalanobis <- distances
# evaluando outliers
cutoff <- qchisq(p = 0.95 , df = ncol(datos))
datos[datos$distances > cutoff ,]
# Distancia de Mahalanobis
temp <- datos %>%
dplyr::select_if(is.numeric)
distances <- mahalanobis(temp, colMeans(temp), cov(temp))
datos$mahalanobis <- distances
# evaluando outliers
cutoff <- qchisq(p = 0.95 , df = ncol(temp))
datos[datos$distances > cutoff ,]
# Distancia de Mahalanobis
temp <- datos %>%
dplyr::select_if(is.numeric)
datos$mahalanobis <- mahalanobis(temp, colMeans(temp), cov(temp))
datos
datos
# Distancia de Mahalanobis
temp <- datos %>%
dplyr::select_if(is.numeric)
datos$mahalanobis <- mahalanobis(temp, colMeans(temp), cov(temp))
daosa$pvalue <- pchisq(datos$mahalnobis, df=1, lower.tail=FALSE)
# Distancia de Mahalanobis
temp <- datos %>%
dplyr::select_if(is.numeric)
datos$mahalanobis <- mahalanobis(temp, colMeans(temp), cov(temp))
daosa$pvalue <- pchisq(datos$mahalnobis, df=3, lower.tail=FALSE)
dataset = 1
results = multieda(df, dataset)
# Distancia de Mahalanobis
temp <- df[[dataset]] %>%
dplyr::select_if(is.numeric)
datos$mahalanobis <- mahalanobis(temp, colMeans(temp), cov(temp))
# Distancia de Mahalanobis
temp <- df[[dataset]] %>%
dplyr::select_if(is.numeric)
temp$mahalanobis <- mahalanobis(temp, colMeans(temp), cov(temp))
temp$pvalue <- pchisq(temp$mahalnobis, df= ncol(temp)-1, lower.tail=FALSE)
temp
temp
# Distancia de Mahalanobis
temp <- df[[dataset]] %>%
dplyr::select_if(is.numeric)
temp$mahalanobis <- mahalanobis(temp, colMeans(temp), cov(temp))
temp$pvalue <- pchisq(temp$mahalnobis, df =7, lower.tail=FALSE)
temp[['mahalnobis']],
temp['mahalnobis']
temp$mahalanobi
temp <- df[[dataset]] %>%
dplyr::select_if(is.numeric)
temp
mahalanobis(temp, colMeans(temp), cov(temp))
temp$mahalanobis <- mahalanobis(temp, colMeans(temp), cov(temp))
temp
temp
temp$mahalanobis
temp$pvalue <- pchisq(temp$mahalanobis, df =7, lower.tail=FALSE)
temp
# Distancia de Mahalanobis
temp <- df[[dataset]] %>%
dplyr::select_if(is.numeric)
temp$mahalanobis <- mahalanobis(temp, colMeans(temp), cov(temp))
temp$pvalue <- pchisq(temp$mahalanobis, df =7, lower.tail=FALSE)
# Distancia de Mahalanobis
temp <- df[[dataset]] %>%
dplyr::select_if(is.numeric)
temp$mahalanobis <- mahalanobis(temp, colMeans(temp), cov(temp))
temp$pvalue <- pchisq(temp$mahalanobis, df =7, lower.tail=FALSE)
temp$outlier <- temp$pvalue < 0.001
temp %>% View()
# Distancia de Mahalanobis
temp <- df[[dataset]] %>%
dplyr::select_if(is.numeric)
temp$mahalanobis <- mahalanobis(temp, colMeans(temp), cov(temp))
temp$pvalue <- pchisq(temp$mahalanobis, df =7, lower.tail=FALSE)
temp$outlier <- temp$pvalue < 0.001
temp[temp$outlier]
# Distancia de Mahalanobis
temp <- df[[dataset]] %>%
dplyr::select_if(is.numeric)
temp$mahalanobis <- mahalanobis(temp, colMeans(temp), cov(temp))
temp$pvalue <- pchisq(temp$mahalanobis, df =7, lower.tail=FALSE)
temp$outlier <- temp$pvalue < 0.001
temp[temp$outlier, ]
temp[temp$outlier, ]
boxplot(temp$mahalanobis, ylab = "Distancias de Mahalanobis")
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("intro.R")
df <- list()
df$IMCinfantil <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/IMCinfantil.xlsx")
df$gorriones <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/gorriones.xlsx")
df$Internet2013 <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/Internet2013.xlsx")
df$recepcionistas <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/recepcionistas.xlsx")
# falta razaperros
# Distancia de Mahalanobis
temp <- df[[dataset]] %>%
dplyr::select_if(is.numeric)
temp$mahalanobis <- mahalanobis(temp, colMeans(temp), cov(temp))
temp$pvalue <- pchisq(temp$mahalanobis, df =7, lower.tail=FALSE)
temp$outlier <- temp$pvalue < 0.001
kable(temp[temp$outlier, ])
