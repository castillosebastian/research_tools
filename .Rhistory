library(FactoMineR)
library(fatoextra)
install.packages("factoextra")
install.packages(c("colorRamps", "corrplot", "DataExplorer", "formattable", "ggbeeswarm", "gghighlight", "moments", "tibbletime"))
library(fatoextra)
install.packages("factoextra")
library(fatoextra)
library(factoextra)
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
source('~/R/research_tools/utn_analisis_inteligente_datos/Unidad0_repos_and_tools.R')
source('~/R/research_tools/utn_analisis_inteligente_datos/Unidad0_repos_and_tools.R')
source('~/R/research_tools/utn_analisis_inteligente_datos/Unidad0_repos_and_tools.R')
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
# Sources tools
# https://rpubs.com/Cristina_Gil/PCA
df_raw <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/nadadores.xlsx")
df_raw <- readxl::read_excel("nadadores.xlsx")
df = df_raw %>% dplyr::select(-Nadador)  # quito columna nombre individuos
df
pca2.nci <- PCA(X = df, scale.unit = TRUE, ncp = 64, graph = FALSE)
pca2.nci %>% kable()
print(pca2.nci)
head(pca2.nci$eig)
fviz_pca_ind(pca_nci, geom.ind = "point",
col.ind = "#FC4E07",
axes = c(1, 2),
pointsize = 1.5)
fviz_pca_ind(pca2_nci, geom.ind = "point",
col.ind = "#FC4E07",
axes = c(1, 2),
pointsize = 1.5)
fviz_pca_ind(pca2.nci, geom.ind = "point",
col.ind = "#FC4E07",
axes = c(1, 2),
pointsize = 1.5)
fviz_pca_var(pca2.nci, col.var = "cos2",
geom.var = "arrow",
labelsize = 2,
repel = FALSE)
biplot(pca2.nci, scale = 0, cex = 0.5, col = c("dodgerblue3", "deeppink3"))
pca =  prcomp(df, center = TRUE, scale. = T)
biplot(pca, scale = 0, cex = 0.5, col = c("dodgerblue3", "deeppink3"))
source('~/R/research_tools/utn_analisis_inteligente_datos/Unidad0_repos_and_tools.R')
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
# Sources tools
# https://rpubs.com/Cristina_Gil/PCA
biplot(x = pca, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
prop_varianza = pca$sdev^2 / sum(pca$sdev^2)
ggplot(data = data.frame(prop_varianza, pc = 1:length(prop_varianza)),
aes(x = pc, y = prop_varianza)) +
geom_col(width = 0.3) +
geom_text(label = round(prop_varianza * 100, digits = 1)) +
scale_y_continuous(limits = c(0,1)) +
theme_bw() +
labs(x = "Componente principal",
y = "Prop. de varianza explicada")
prop_varianza_acum <- cumsum(prop_varianza)
ggplot(data = data.frame(prop_varianza_acum, pc = 1:length(prop_varianza_acum)),
aes(x = pc, y = prop_varianza_acum, group = 1)) +
geom_point() +
geom_line() +
geom_text(label = round(prop_varianza_acum * 100, digits = 1), vjust =-.5) +
labs(x = "Componente principal",
y = "Prop. varianza explicada acumulada")
summary(pca)
prop_varianza = pca$sdev^2 / sum(pca$sdev^2)
ggplot(data = data.frame(prop_varianza, pc = 1:length(prop_varianza)),
aes(x = pc, y = prop_varianza)) +
geom_col(width = 0.3) +
geom_text(label = round(prop_varianza * 100, digits = 1)) +
scale_y_continuous(limits = c(0,1)) +
theme_bw() +
labs(x = "Componente principal",
y = "Prop. de varianza explicada")
prop_varianza_acum <- cumsum(prop_varianza)
ggplot(data = data.frame(prop_varianza_acum, pc = 1:length(prop_varianza_acum)),
aes(x = pc, y = prop_varianza_acum, group = 1)) +
geom_point() +
geom_line() +
geom_text(label = round(prop_varianza_acum * 100, digits = 1), vjust =-.5) +
labs(x = "Componente principal",
y = "Prop. varianza explicada acumulada")
summary(pca2.nci)
fviz_pca_ind(pca2.nci, geom.ind = "point",
col.ind = "#FC4E07",
axes = c(1, 2), # axes 1 y 2 se corresponden con PC1 y PC2, pudiendo escoger otros
pointsize = 1.5)
fviz_pca_var(pca2.nci, col.var = "black",repel = TRUE)
fviz_screeplot(pca2.nci, addlabels = TRUE, ylim = c(0, 20))
fviz_screeplot(pca2.nci, addlabels = TRUE)
fviz_contrib(pca2_nci, choice = "var", axes = 1, top = 10)
fviz_contrib(pca2.nci, choice = "var", axes = 1, top = 10)
pca$center
pca$scale
pca$rotation
pca$x
pca$sdev
pca$sdev^2
pca2.nci$eig
pca2.nci
summary(pca2.nci)
# Importar a mano pegando portapales------------------------
# df = as.integer(strsplit(as.character(c("3 1 1 1 3 1 1 1 5")), " ")[[1]])
# df =  matrix(df, nrow = 3, byrow = T)
# df
# Importar definiendo df------------------------------------
# df <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
#                dimnames = list(c("row1", "row2"),
#                                c("C.1", "C.2", "C.3")))
# df
# Importar leyendo-------------------------------------------
#df_raw <- readxl::read_excel("nadadores.xlsx")
#df = df_raw %>% dplyr::select(-Nadador)  # quito columna nombre individuos
df <- readxl::read_excel("aspirantes.xlsx") %>% select(-ID)
readxl::read_excel("aspirantes.xlsx")
readxl::read_excel("aspirantes.xlsx") %>% select(-ID)
# Importar a mano pegando portapales------------------------
# df = as.integer(strsplit(as.character(c("3 1 1 1 3 1 1 1 5")), " ")[[1]])
# df =  matrix(df, nrow = 3, byrow = T)
# df
# Importar definiendo df------------------------------------
# df <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
#                dimnames = list(c("row1", "row2"),
#                                c("C.1", "C.2", "C.3")))
# df
# Importar leyendo-------------------------------------------
#df_raw <- readxl::read_excel("nadadores.xlsx")
#df = df_raw %>% dplyr::select(-Nadador)  # quito columna nombre individuos
df <- readxl::read_excel("aspirantes.xlsx") %>% dplyr::select(-ID)
summary(pca)
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
# Sources tools
# https://rpubs.com/Cristina_Gil/PCA
# Importar a mano pegando portapales------------------------
# df = as.integer(strsplit(as.character(c("3 1 1 1 3 1 1 1 5")), " ")[[1]])
# df =  matrix(df, nrow = 3, byrow = T)
# df
# Importar definiendo df------------------------------------
# df <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
#                dimnames = list(c("row1", "row2"),
#                                c("C.1", "C.2", "C.3")))
# df
# Importar leyendo-------------------------------------------
#df_raw <- readxl::read_excel("nadadores.xlsx")
#df = df_raw %>% dplyr::select(-Nadador)  # quito columna nombre individuos
df <- readxl::read_excel("aspirantes.xlsx") %>% dplyr::select(-ID)
kable(head(df))
skim(df)
pca =  prcomp(df, center = TRUE, scale. = T) # trabajamos con la matriz correlacion
pca$center
pca$scale
pca$rotation %>% head()
pca$x %>% head()
pca$sdev
pca$sdev^2
summary(pca)
head(df)
prop_varianza = pca$sdev^2 / sum(pca$sdev^2)
ggplot(data = data.frame(prop_varianza, pc = 1:length(prop_varianza)),
aes(x = pc, y = prop_varianza)) +
geom_col(width = 0.3) +
geom_text(label = round(prop_varianza * 100, digits = 1)) +
scale_y_continuous(limits = c(0,1)) +
theme_bw() +
labs(x = "Componente principal",
y = "Prop. de varianza explicada")
prop_varianza_acum <- cumsum(prop_varianza)
ggplot(data = data.frame(prop_varianza_acum, pc = 1:length(prop_varianza_acum)),
aes(x = pc, y = prop_varianza_acum, group = 1)) +
geom_point() +
geom_line() +
geom_text(label = round(prop_varianza_acum * 100, digits = 1), vjust =-.5) +
labs(x = "Componente principal",
y = "Prop. varianza explicada acumulada")
pca2.nci <- PCA(X = df, scale.unit = TRUE, ncp = 64, graph = FALSE)
print(pca2.nci)
pca2.nci$eig
summary(pca2.nci)
fviz_pca_ind(pca2.nci, geom.ind = "point",
col.ind = "#FC4E07",
axes = c(1, 2), # axes 1 y 2 se corresponden con PC1 y PC2, pudiendo escoger otros
pointsize = 1.5)
fviz_pca_var(pca2.nci, col.var = "black",repel = TRUE)
fviz_screeplot(pca2.nci, addlabels = TRUE)
fviz_contrib(pca2.nci, choice = "var", axes = 1, top = 10)
var <- get_pca_var(pca2.nci)
corrplot(var$contrib, is.corr=FALSE)
var <- get_pca_var(pca2.nci)
corrplot(var$cos2, is.corr=FALSE)
pca2.nci$eig
pca2.nci$eig$eigenvalue
pca2.nci$eig[1]
pca2.nci$eig
pca2.nci$eig[1]
pca2.nci$eig
pca2.nci$eig[[1]]
as.tibble(pca2.nci$eig)
as.tibble(pca2.nci$eig) %>% .$eigenvalue
as.tibble(pca2.nci$eig) %>% .$eigenvalue >= 0.7
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow()))
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.)))
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% filter(eigenvalue >= 0.7)
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% filter(eigenvalue >= 0.7) %>% .$comp
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% filter('cumulative percentage of variance' >= 0.9) %>% .$comp`
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% filter('cumulative percentage of variance' >= 0.9)
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% filter('cumulative percentage of variance' >= 90)
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% filter('cumulative percentage of variance' < 90)
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% View()
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% filter('cumulative percentage of variance' > 90)
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% filter(round('cumulative percentage of variance')  > 90)
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% filter(as.integer('cumulative percentage of variance')  > 90)
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% View()
str(as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))))
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% make_clean_names()
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% make_names()
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% make.names()
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% View()
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% rename(cum = 'cumulative percentage of variance') %>% View()
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% rename(cum = 'cumulative percentage of variance') %>% filter(cum <= 0.9) %>% View()
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% rename(cum = 'cumulative percentage of variance') %>% filter(cum <= 90) %>% View()
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% rename(cum = 'cumulative percentage of variance') %>% filter(cum <= 91) %>% View()
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% rename(cum = 'cumulative percentage of variance') %>% filter(cum <= 95) %>% View()
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% rename(cum = 'cumulative percentage of variance') %>% filter(cum <= 90) %>% View()
as.tibble(pca2.nci$eig) %>% mutate('comp' = str_c('comp', 1:nrow(.))) %>% rename(cum = 'cumulative percentage of variance') %>% filter(cum <= 90) %>% View()
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
# library('FactoMineR')
# bibliograf
# https://rpubs.com/lucia_cabrera/610195
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
# https://rpubs.com/ercalel/593452
# https://bookdown.org/jsalinas/tecnicas_multivariadas/acp.html
include_graphics('independencia_homogeneidad.png')
install.packages("vcd")
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
# library('FactoMineR')
# bibliograf
# https://rpubs.com/lucia_cabrera/610195
datos <- data.frame( sujeto = c("No alérgico", "No alérgico", "No alérgico",
"No alérgico", "alérgico", "No alérgico",
"No alérgico", "alérgico", "alérgico",
"No alérgico", "alérgico", "alérgico",
"alérgico", "alérgico", "alérgico",
"No alérgico", "No alérgico", "No alérgico",
"No alérgico", "alérgico", "alérgico",
"alérgico", "alérgico", "No alérgico",
"alérgico", "No alérgico", "No alérgico",
"alérgico","alérgico", "alérgico"),
mutacion = c(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE,
FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE,
TRUE, FALSE,  FALSE, TRUE, FALSE, TRUE, FALSE,
TRUE, FALSE,FALSE, FALSE, TRUE, FALSE, FALSE,
TRUE, FALSE, TRUE))
tabla <- table(datos$sujeto, datos$mutacion, dnn = c("Sujeto", "Estado gen"))
fisher.test(x = tabla, alternative = "two.sided")
assocstats(x = tabla)
df <- tribble(
~renta, ~bueno, ~malo, ~regular,
'Bajo', 75,40,35,
'Medio', 60,50,70,
'Alto', 20,40,30,
'Muy Alto', 15,40,25)
df <- df %>% column_to_rownames(var = 'renta')
# Para graficarlo con % fila (perifles fila)
df_prop = prop.table(as.matrix(df),margin=1)
df_prop
# Para graficarlo con % columna (perifles fila)
df_prop = prop.table(as.matrix(df),margin=2)
df_prop
library(gplots)
install.packages("gplots")
library(gplots)
# 1. convert the data as a table
dt <- as.table(as.matrix(df))
# 2. Graph
balloonplot(t(dt), main ="Grafico", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
prueba <- chisq.test(df)
prueba
qchisq(0.95,6) # se obtienen el estadístico de contraste completando el nivel de no rechazo (1-alfa) y los grados de libertd
# Observed counts
prueba$observed
# Expected counts
round(prueba$expected,2)
# Cells with the highest absolute standardized residuals contribute the most to the total Chi-square score.
round(prueba$residuals, 3)
# Contibution in percentage (%)
contrib <- 100*prueba$residuals^2/prueba$statistic
round(contrib, 3)
# Visualize the contribution
corrplot(contrib, is.cor = FALSE)
ACS <- CA(datos_billete_cien, graph = FALSE)
file_path <- "http://www.sthda.com/sthda/RDoc/data/housetasks.txt"
housetasks <- read.delim(file_path, row.names = 1)
head(housetasks)
# 1. convert the data as a table
dt <- as.table(as.matrix(housetasks))
# 2. Graph
balloonplot(t(dt), main ="housetasks", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
# 1. convert the data as a table
dt <- as.table(as.matrix(housetasks))
# 2. Graph
balloonplot(t(dt), main ="table", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
install.packages("FactoClass")
FactoClass::plotct (dt,"row")
mosaicplot(t(dt),color=rainbow(6),main="Perfiles columna", las = 1 )
mosaicplot(t(dt),main="Perfiles columna", las = 1 )
mosaicplot(dt,color=rainbow(nrow(dt)),main="Perfiles fila", las = 1)
mosaicplot(t(dt),color=rainbow(nrow(dt)),main="Perfiles columna", las = 1)
mosaicplot(t(dt),color=rainbow(nrow(dt)),main="Perfiles columna", las = 2)
mosaicplot(dt,color=rainbow(nrow(dt)),main="Perfiles fila", las = 2)
mosaicplot(dt,color=rainbow(nrow(dt)),main="Perfiles fila", las = 2)
mosaicplot(dt,shade = T,main="Perfiles fila", las = 2)
mosaicplot(dt,shade = T,main="Perfiles fila", las = 2)
mosaicplot(t(dt),shade = T,,main="Perfiles columna", las = 2)
chisq <- chisq.test(dt)
chisq
round(chisq$expected,2)
qchisq(0.95,36) # se obtienen el estadístico de contraste completando el nivel de no rechazo (1-alfa) y los grados de libertd
qchisq(0.95,36) # se obtienen el estadístico de contraste completando el nivel de no rechazo (1-alfa) y los grados de libertd
chisq$observed
# Cells with the highest absolute standardized residuals contribute the most to the total Chi-square score.
round(prueba$residuals, 3)
# Cells with the highest absolute standardized residuals contribute the most to the total Chi-square score.
round(dt$residuals, 3)
# Cells with the highest absolute standardized residuals contribute the most to the total Chi-square score.
round(chisq$residuals, 3)
library(corrplot)
corrplot(chisq$residuals, is.cor = FALSE)
# Contibution in percentage (%)
contrib <- 100*chisq$residuals^2/chisq$statistic
round(contrib, 3)
chisq$p.value
# Visualize the contribution
corrplot(contrib, is.cor = FALSE)
chisq <- chisq.test(dt)
chisq
qchisq(0.95,36) # se obtienen el estadístico de contraste completando el nivel de no rechazo (1-alfa) y los grados de libertd
if ( chisq$p.value > qchisq(0.95,36)){
'H0 debe rechazarse'
} else{
'No hay evidencia para rechazar H0'
}
if ( chisq$statistic > qchisq(0.95,36)){
'H0 debe rechazarse'
} else{
'No hay evidencia para rechazar H0'
}
if ( chisq$statistic > qchisq(0.95,36)){
'H0 debe rechazarse'
} else{
'No hay evidencia para rechazar H0'
}
if ( chisq$statistic > qchisq(0.95,chisq$parameter)){
'H0 debe rechazarse'
} else{
'No hay evidencia para rechazar H0'
}
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
# library('FactoMineR')
# bibliograf
# https://rpubs.com/lucia_cabrera/610195
# https://rpubs.com/pg2000in/ChiSqIndependence
ACS <- CA(dt, graph = FALSE)
# % de varianza explicado
valores_propios=ACS$eig; valores_propios
fviz_screeplot(ACS, addlabels = TRUE) +
ylab("Porcentaje de varianza explicado") + xlab("Ejes")
#Representación simultánea
fviz_ca_biplot(ACS, repel = TRUE)
summary(ACS)
row <- get_ca_row(ACS)
row
row <- factoextra::get_ca_row(ACS)
row
row$inertia
corrplot(row$inertia, is.corr=FALSE)
install.packages("vegan")
corres2 <- vegan::cca(chisq)
corres2 <- vegan::cca(dt)
summary(corres2)
