TRUE, FALSE,FALSE, FALSE, TRUE, FALSE, FALSE,
TRUE, FALSE, TRUE))
tabla <- table(datos$sujeto, datos$mutacion, dnn = c("Sujeto", "Estado gen"))
fisher.test(x = tabla, alternative = "two.sided")
assocstats(x = tabla)
df <- tribble(
~renta, ~bueno, ~malo, ~regular,
'Bajo', 75,40,35,
'Medio', 60,50,70,
'Alto', 20,40,30,
'Muy Alto', 15,40,25)
df <- df %>% column_to_rownames(var = 'renta')
# Para graficarlo con % fila (perifles fila)
df_prop = prop.table(as.matrix(df),margin=1)
df_prop
# Para graficarlo con % columna (perifles fila)
df_prop = prop.table(as.matrix(df),margin=2)
df_prop
library(gplots)
install.packages("gplots")
library(gplots)
# 1. convert the data as a table
dt <- as.table(as.matrix(df))
# 2. Graph
balloonplot(t(dt), main ="Grafico", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
prueba <- chisq.test(df)
prueba
qchisq(0.95,6) # se obtienen el estadístico de contraste completando el nivel de no rechazo (1-alfa) y los grados de libertd
# Observed counts
prueba$observed
# Expected counts
round(prueba$expected,2)
# Cells with the highest absolute standardized residuals contribute the most to the total Chi-square score.
round(prueba$residuals, 3)
# Contibution in percentage (%)
contrib <- 100*prueba$residuals^2/prueba$statistic
round(contrib, 3)
# Visualize the contribution
corrplot(contrib, is.cor = FALSE)
ACS <- CA(datos_billete_cien, graph = FALSE)
file_path <- "http://www.sthda.com/sthda/RDoc/data/housetasks.txt"
housetasks <- read.delim(file_path, row.names = 1)
head(housetasks)
# 1. convert the data as a table
dt <- as.table(as.matrix(housetasks))
# 2. Graph
balloonplot(t(dt), main ="housetasks", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
# 1. convert the data as a table
dt <- as.table(as.matrix(housetasks))
# 2. Graph
balloonplot(t(dt), main ="table", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
install.packages("FactoClass")
FactoClass::plotct (dt,"row")
mosaicplot(t(dt),color=rainbow(6),main="Perfiles columna", las = 1 )
mosaicplot(t(dt),main="Perfiles columna", las = 1 )
mosaicplot(dt,color=rainbow(nrow(dt)),main="Perfiles fila", las = 1)
mosaicplot(t(dt),color=rainbow(nrow(dt)),main="Perfiles columna", las = 1)
mosaicplot(t(dt),color=rainbow(nrow(dt)),main="Perfiles columna", las = 2)
mosaicplot(dt,color=rainbow(nrow(dt)),main="Perfiles fila", las = 2)
mosaicplot(dt,color=rainbow(nrow(dt)),main="Perfiles fila", las = 2)
mosaicplot(dt,shade = T,main="Perfiles fila", las = 2)
mosaicplot(dt,shade = T,main="Perfiles fila", las = 2)
mosaicplot(t(dt),shade = T,,main="Perfiles columna", las = 2)
chisq <- chisq.test(dt)
chisq
round(chisq$expected,2)
qchisq(0.95,36) # se obtienen el estadístico de contraste completando el nivel de no rechazo (1-alfa) y los grados de libertd
qchisq(0.95,36) # se obtienen el estadístico de contraste completando el nivel de no rechazo (1-alfa) y los grados de libertd
chisq$observed
# Cells with the highest absolute standardized residuals contribute the most to the total Chi-square score.
round(prueba$residuals, 3)
# Cells with the highest absolute standardized residuals contribute the most to the total Chi-square score.
round(dt$residuals, 3)
# Cells with the highest absolute standardized residuals contribute the most to the total Chi-square score.
round(chisq$residuals, 3)
library(corrplot)
corrplot(chisq$residuals, is.cor = FALSE)
# Contibution in percentage (%)
contrib <- 100*chisq$residuals^2/chisq$statistic
round(contrib, 3)
chisq$p.value
# Visualize the contribution
corrplot(contrib, is.cor = FALSE)
chisq <- chisq.test(dt)
chisq
qchisq(0.95,36) # se obtienen el estadístico de contraste completando el nivel de no rechazo (1-alfa) y los grados de libertd
if ( chisq$p.value > qchisq(0.95,36)){
'H0 debe rechazarse'
} else{
'No hay evidencia para rechazar H0'
}
if ( chisq$statistic > qchisq(0.95,36)){
'H0 debe rechazarse'
} else{
'No hay evidencia para rechazar H0'
}
if ( chisq$statistic > qchisq(0.95,36)){
'H0 debe rechazarse'
} else{
'No hay evidencia para rechazar H0'
}
if ( chisq$statistic > qchisq(0.95,chisq$parameter)){
'H0 debe rechazarse'
} else{
'No hay evidencia para rechazar H0'
}
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
# library('FactoMineR')
# bibliograf
# https://rpubs.com/lucia_cabrera/610195
# https://rpubs.com/pg2000in/ChiSqIndependence
ACS <- CA(dt, graph = FALSE)
# % de varianza explicado
valores_propios=ACS$eig; valores_propios
fviz_screeplot(ACS, addlabels = TRUE) +
ylab("Porcentaje de varianza explicado") + xlab("Ejes")
#Representación simultánea
fviz_ca_biplot(ACS, repel = TRUE)
summary(ACS)
row <- get_ca_row(ACS)
row
row <- factoextra::get_ca_row(ACS)
row
row$inertia
corrplot(row$inertia, is.corr=FALSE)
install.packages("vegan")
corres2 <- vegan::cca(chisq)
corres2 <- vegan::cca(dt)
summary(corres2)
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
# library('FactoMineR')
# bibliograf
# https://rpubs.com/lucia_cabrera/610195
df <- readxl::read_xlsx("empresa.xlsx")
View(df)
empresa <- df
Género=factor(empresa$Género)
Antigüedad=factor(empresa$Antigüedad)
Ingresos=factor(empresa$Ingresos)
Categoría=factor(empresa$Categoría)
base=data.frame(Género,Ingresos,Categoría)
#Armalabasededatosconlasvariablescomofactores
# Analisis decorrespondenciasmúltiple
empresa.acm=MCA(base,quali.sup=1,graph=F)
fviz_contrib(empresa.acm,choice="var",axes=1, fill="royalblue",color="black") +
theme_gray()
#Graficalascontribucionesdelasvariables
fviz_contrib(empresa.acm,choice="ind",axes=1, top=5, fill="royalblue",color="black")+
theme_gray()
#Graficalascontribucionesdelosindividuos
fviz_mca_var(empresa.acm,repel=TRUE,col.var="royalblue") +
theme_gray()
#Realizaelbiplotsimétrico
fviz_mca_ind(empresa.acm,habillage=Género,addEllipses=TRUE, repel=TRUE,legend.title="Género") +
theme_gray() +
scale_color_brewer(palette="Paired")
#Realizaunagrupamientoporgénero
acm.disjonctif(base)#Calculalamatrizdisyuntiva
acm.disjonctif(empresa)#Calculalamatrizdisyuntiva
install.packages("anacor")
df <- readxl::read_xlsx("df.xlsx")
setwd("~/R/research_tools/utn_analisis_inteligente_datos")
df <- readxl::read_xlsx("df.xlsx")
df <- readxl::read_xlsx("empresa.xlsx")
df <- df %>%
mutate_all(as.factor)
View(df)
# Analisis decorrespondenciasmúltiple
df.acm=MCA(base,quali.sup=1,graph=F)
summary(df.acm)
fviz_contrib(df.acm,choice="var",axes=1, fill="royalblue",color="black") +
theme_gray()
#Graficalascontribucionesdelasvariables
fviz_contrib(df.acm,choice="ind",axes=1, top=5, fill="royalblue",color="black")+
theme_gray()
#Graficalascontribucionesdelosindividuos
fviz_mca_var(df.acm,repel=TRUE,col.var="royalblue") +
theme_gray()
#Realizaelbiplotsimétrico
fviz_mca_ind(df.acm,habillage=Género,addEllipses=TRUE, repel=TRUE,legend.title="Género") +
theme_gray() +
scale_color_brewer(palette="Paired")
#Realizaunagrupamientoporgénero
#Calculalamatrizdisyuntiva
#CalculalamatrizdeBurt
# Calculalas inercias
# Calculalas coordenadaspara representa r
fviz_screeplot(df.acm, addlabels = TRUE)
fviz_mca_var(df.acm,ggtheme = theme_minimal()) +
theme_gray()
fviz_mca_var(df.acm,ggtheme = theme_minimal())
mburt <- MCA(df, method = 'Burt')
mburt$eig
summary(mburt)
df
#Realizaelbiplotsimétrico
fviz_mca_ind(df.acm,habillage=Género,addEllipses=TRUE, repel=TRUE,legend.title="Género") +
theme_gray() +
scale_color_brewer(palette="Paired")
#Realizaunagrupamientoporgénero
#Calculalamatrizdisyuntiva
#CalculalamatrizdeBurt
# Calculalas inercias
# Calculalas coordenadaspara representa r
#Realizaelbiplotsimétrico
fviz_mca_ind(df.acm,addEllipses=TRUE, repel=TRUE) +
theme_gray() +
scale_color_brewer(palette="Paired")
#Realizaunagrupamientoporgénero
#Calculalamatrizdisyuntiva
#CalculalamatrizdeBurt
# Calculalas inercias
# Calculalas coordenadaspara representa r
names(df)
names(df)[[1]]
# Elegir variables para representar las elipses
variable_represent = names(df)[[2]]
fviz_mca_ind(df.acm,habillage=variable_represent,addEllipses=TRUE, repel=TRUE) +
theme_gray() +
scale_color_brewer(palette="Paired")
#Realizaunagrupamientoporgénero
#Calculalamatrizdisyuntiva
#CalculalamatrizdeBurt
# Calculalas inercias
# Calculalas coordenadaspara representa r
# Elegir variables para representar las elipses
variable_represent = names(df)[[3]]
fviz_mca_ind(df.acm,habillage=variable_represent,addEllipses=TRUE, repel=TRUE) +
theme_gray() +
scale_color_brewer(palette="Paired")
# Elegir variables para representar las elipses
variable_represent = names(df)[[3]]
fviz_mca_ind(df.acm,habillage=variable_represent,addEllipses=TRUE, repel=TRUE) +
theme_gray()
# Elegir variables para representar las elipses
variable_represent = names(df)[[1]]
fviz_mca_ind(df.acm,habillage=variable_represent,addEllipses=TRUE, repel=TRUE) +
theme_gray()
names(df)[[1]]
# Elegir variables para representar las elipses
variable_represent = names(df)[[3]]
fviz_mca_ind(df.acm,habillage=variable_represent,addEllipses=TRUE, repel=TRUE) +
theme_gray()
# Elegir variables para representar las elipses
variable_represent = names(df)[[2]]
fviz_mca_ind(df.acm,habillage=variable_represent,addEllipses=TRUE, repel=TRUE) +
theme_gray()
#Realizaunagrupamientoporgénero
#Calculalamatrizdisyuntiva
#CalculalamatrizdeBurt
# Calculalas inercias
# Calculalas coordenadaspara representa r
install.packages("ca")
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
# library('FactoMineR')
# bibliograf
# https://rpubs.com/lucia_cabrera/610195
# https://rpubs.com/pg2000in/ChiSqIndependence
library('ca')
atencion_ac <- ca(base, graph = F)
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
# library('FactoMineR')
# bibliograf
# https://rpubs.com/lucia_cabrera/610195
# https://rpubs.com/pg2000in/ChiSqIndependence
file_path <- "http://www.sthda.com/sthda/RDoc/data/housetasks.txt"
housetasks <- read.delim(file_path, row.names = 1)
head(housetasks)
# 1. convert the data as a table
dt <- as.table(as.matrix(housetasks))
# 2. Graph
balloonplot(t(dt), main ="table", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
mosaicplot(dt,shade = T,main="Perfiles fila", las = 2)
mosaicplot(t(dt),shade = T,,main="Perfiles columna", las = 2)
chisq <- chisq.test(dt)
chisq
qchisq(0.95,36) # se obtienen el estadístico de contraste completando el nivel de no rechazo (1-alfa) y los grados de libertd
if ( chisq$statistic > qchisq(0.95,chisq$parameter)){
'H0 debe rechazarse'
} else{
'No hay evidencia para rechazar H0'
}
chisq$observed
round(chisq$expected,2)
# Cells with the highest absolute standardized residuals contribute the most to the total Chi-square score.
round(chisq$residuals, 3)
library(corrplot)
corrplot(chisq$residuals, is.cor = FALSE)
# Contibution in percentage (%)
contrib <- 100*chisq$residuals^2/chisq$statistic
round(contrib, 3)
# Visualize the contribution
corrplot(contrib, is.cor = FALSE)
ACS <- CA(dt, graph = FALSE)
summary(ACS)
# % de varianza explicado
valores_propios=ACS$eig; valores_propios
fviz_screeplot(ACS, addlabels = TRUE) +
ylab("Porcentaje de varianza explicado") + xlab("Ejes")
#Representación simultánea
fviz_ca_biplot(ACS, repel = TRUE)
row <- factoextra::get_ca_row(ACS)
row
row$inertia
library('ca')
atencion_ac <- ca(base, graph = F)
library('ca')
atencion_ac <- ca(dt, graph = F)
summary(atencion_ac)
library('ca')
atencion_ac <- ca(empresa, graph = F)
library('ca')
atencion_ac <- ca(df, graph = F)
library('ca')
atencion_ac <- ca(df, graph = F)
library('ca')
dt <- as.table(as.matrix(df))
atencion_ac <- ca(dt, graph = F)
library('ca')
dt <- as.table(as.matrix(df))
atencion_ac <- ca(dt, graph = F)
library('ca')
atencion_ac <- ca(dt, graph = F)
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
# library('FactoMineR')
# bibliograf
# https://rpubs.com/lucia_cabrera/610195
# https://rpubs.com/pg2000in/ChiSqIndependence
file_path <- "http://www.sthda.com/sthda/RDoc/data/housetasks.txt"
housetasks <- read.delim(file_path, row.names = 1)
head(housetasks)
# 1. convert the data as a table
dt <- as.table(as.matrix(housetasks))
# 2. Graph
balloonplot(t(dt), main ="table", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
mosaicplot(dt,shade = T,main="Perfiles fila", las = 2)
mosaicplot(t(dt),shade = T,,main="Perfiles columna", las = 2)
chisq <- chisq.test(dt)
chisq
qchisq(0.95,36) # se obtienen el estadístico de contraste completando el nivel de no rechazo (1-alfa) y los grados de libertd
if ( chisq$statistic > qchisq(0.95,chisq$parameter)){
'H0 debe rechazarse'
} else{
'No hay evidencia para rechazar H0'
}
chisq$observed
round(chisq$expected,2)
# Cells with the highest absolute standardized residuals contribute the most to the total Chi-square score.
round(chisq$residuals, 3)
library(corrplot)
corrplot(chisq$residuals, is.cor = FALSE)
# Contibution in percentage (%)
contrib <- 100*chisq$residuals^2/chisq$statistic
round(contrib, 3)
# Visualize the contribution
corrplot(contrib, is.cor = FALSE)
ACS <- CA(dt, graph = FALSE)
summary(ACS)
# % de varianza explicado
valores_propios=ACS$eig; valores_propios
fviz_screeplot(ACS, addlabels = TRUE) +
ylab("Porcentaje de varianza explicado") + xlab("Ejes")
#Representación simultánea
fviz_ca_biplot(ACS, repel = TRUE)
row <- factoextra::get_ca_row(ACS)
row
library('ca')
atencion_ac <- ca(dt, graph = F)
summary(atencion_ac)
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
# library('FactoMineR')
# bibliograf
# https://rpubs.com/lucia_cabrera/610195
df <- readxl::read_xlsx("empresa.xlsx")
df <- df %>%
mutate_all(as.factor)
# Analisis decorrespondenciasmúltiple
df.acm= MCA(df,quali.sup=1,graph=F)
summary(df.acm)
fviz_screeplot(df.acm, addlabels = TRUE)
fviz_contrib(df.acm,choice="var",axes=1, fill="royalblue",color="black") +
theme_gray()
#Graficalascontribucionesdelasvariables
fviz_contrib(df.acm,choice="ind",axes=1, top=5, fill="royalblue",color="black")+
theme_gray()
#Graficalascontribucionesdelosindividuos
fviz_mca_var(df.acm,ggtheme = theme_minimal())
# Elegir variables para representar las elipses
# variable_represent = names(df)[[2]]
#
# fviz_mca_ind(df.acm,habillage=variable_represent,addEllipses=TRUE, repel=TRUE) +
#   theme_gray()
#Realizaunagrupamientoporgénero
#Calculalamatrizdisyuntiva
#CalculalamatrizdeBurt
# Calculalas inercias
# Calculalas coordenadaspara representa r
mburt <- MCA(df, method = 'Burt')
summary(mburt)
library('ca')
dt <- as.table(as.matrix(df))
atencion_ac <- ca(d, graph = F)
library('ca')
dt <- as.table(as.matrix(df))
atencion_ac <- ca(dt, graph = F)
install.packages("raster")
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
df <- list()
df$IMCinfantil <- readxl::read_excel("IMCinfantil.xlsx")
# df$gorriones <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/gorriones.xlsx")
# df$Internet2013 <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/Internet2013.xlsx")
# df$recepcionistas <- readxl::read_excel("~/research_tools/utn_analisis_inteligente_datos/recepcionistas.xlsx")
# falta razaperros
dataset = 1
results = multieda(df, dataset)
multieda <- function(list, df = 1){
lista_resultados <- list()
# CV = proporcion que representa el desvıo estandar de la media aritmetica
lista_resultados$coeficiente_variacion <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(raster::cv, na.rm =T)
lista_resultados$sesgo <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(moments::skewness)
# Las distribuciones leptocurticas tienen coeficientes superiores a 3 y las
# platicurticas coeficientes menores a 3
lista_resultados$curtosis <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(moments::kurtosis)
# Estadística Robusta
# Median Absolute Deviation= mediana de los desvıos absolutos respecto de la mediana
lista_resultados$mad <- list[[df]] %>%
dplyr::select_if(is.numeric) %>%
summarise_all(mad)
# grafico de correlacion
lista_resultados$m_correlacion <- list[[df]] %>%
select_if(is.numeric) %>%
cor(., use="complete.obs") %>%
round(., 2)
lista_resultados
}
dataset = 1
results = multieda(df, dataset)
knit_print(skim(df[[dataset]]))
knit_print(results)
datos = df[[dataset]]
columnas = names(datos)[-1]
datos <- datos %>%
pivot_longer(cols = columnas, names_to = 'variables', values_to = 'valores') %>%
mutate(variables = str_remove_all(variables, ' ')) %>%
separate(col = variables, into = c('variables', 'juez'), sep = '\\.')
datos %>%
group_by(juez, candidatos) %>%
summarise(promedio = round(mean(valores), digits = 2)) %>%
arrange(juez, desc(promedio)) %>%
kable()
datos %>% group_by(candidatos) %>% summarise(promedio = round(mean(valores), digits = 2)) %>%
arrange(desc(promedio)) %>%
kable()
knitr::opts_chunk$set(echo = T, warning = F, message = F)
source("Unidad0_repos_and_tools.R")
# library('FactoMineR')
# bibliograf
# https://rpubs.com/lucia_cabrera/610195
df <- readxl::read_xlsx("empresa.xlsx")
df <- df %>%
mutate_all(as.factor)
# Analisis decorrespondenciasmúltiple
df.acm= MCA(df,quali.sup=1,graph=F)
summary(df.acm)
fviz_screeplot(df.acm, addlabels = TRUE)
fviz_contrib(df.acm,choice="var",axes=1, fill="royalblue",color="black") +
theme_gray()
#Graficalascontribucionesdelasvariables
fviz_contrib(df.acm,choice="ind",axes=1, top=5, fill="royalblue",color="black")+
theme_gray()
#Graficalascontribucionesdelosindividuos
fviz_mca_var(df.acm,ggtheme = theme_minimal())
# Elegir variables para representar las elipses
# variable_represent = names(df)[[2]]
#
# fviz_mca_ind(df.acm,habillage=variable_represent,addEllipses=TRUE, repel=TRUE) +
#   theme_gray()
#Realizaunagrupamientoporgénero
#Calculalamatrizdisyuntiva
#CalculalamatrizdeBurt
# Calculalas inercias
# Calculalas coordenadaspara representa r
mburt <- MCA(df, method = 'Burt')
ACM <- MCA(df, method = 'Burt')
summary(ACM)
corrplot::corrplot(ACM$var$eta2, is.corr=FALSE,  method=c("color"),addCoef.col = "black")
fviz_mca_var(df.acm,ggtheme = theme_minimal(), repel = T)
mean(2,3,4)
var(2,3,4)
x <- (2,3,4,5,6,3,9)
x <- c(2,3,4,5,6,3,9)
prom = mean(x)
x - prom
sum(x - prom)
